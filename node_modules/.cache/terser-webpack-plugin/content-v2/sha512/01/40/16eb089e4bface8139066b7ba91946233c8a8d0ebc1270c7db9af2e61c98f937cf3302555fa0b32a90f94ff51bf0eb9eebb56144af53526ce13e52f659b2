{"map":"{\"version\":3,\"sources\":[\"G:\\\\Users\\\\damia\\\\Documents\\\\GitHub\\\\scooters-map\\\\node_modules\\\\url-loader\\\\dist\\\\cjs.js??ref--7-oneOf-0!G:\\\\Users\\\\damia\\\\Documents\\\\GitHub\\\\scooters-map\\\\src\\\\logo.png\",\"G:\\\\Users\\\\damia\\\\Documents\\\\GitHub\\\\scooters-map\\\\src\\\\App.js\",\"G:\\\\Users\\\\damia\\\\Documents\\\\GitHub\\\\scooters-map\\\\src\\\\serviceWorker.js\",\"G:\\\\Users\\\\damia\\\\Documents\\\\GitHub\\\\scooters-map\\\\src\\\\index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"App\",\"_Component\",\"_getPrototypeOf2\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"_len\",\"arguments\",\"length\",\"args\",\"Array\",\"_key\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"apply\",\"concat\",\"state\",\"showingInfoWindow\",\"activeMarker\",\"selectedPlace\",\"vehicles\",\"onMarkerClick\",\"props\",\"marker\",\"e\",\"setState\",\"onMapClicked\",\"inherits\",\"createClass\",\"key\",\"value\",\"_this2\",\"fetch\",\"then\",\"response\",\"json\",\"data\",\"catch\",\"err\",\"console\",\"log\",\"_this3\",\"scooters\",\"id\",\"lat\",\"lng\",\"range\",\"react_default\",\"a\",\"createElement\",\"className\",\"src\",\"logo\",\"alt\",\"VehiclesList\",\"dist\",\"google\",\"initialCenter\",\"zoom\",\"onClick\",\"paths\",\"strokeColor\",\"strokeOpacity\",\"strokeWeight\",\"fillColor\",\"fillOpacity\",\"map\",\"position\",\"icon\",\"url\",\"scaledSize\",\"width\",\"height\",\"name\",\"desc\",\"Math\",\"round\",\"visible\",\"dangerouslySetInnerHTML\",\"__html\",\"Component\",\"_ref\",\"VehicleItem\",\"idx\",\"vehicle_name\",\"vehicle_type\",\"_ref2\",\"_ref2$vehicle_type\",\"imgUrl\",\"GoogleApiWrapper\",\"apiKey\",\"language\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.1edb075a.png\\\";\",\"import React, { Component } from 'react';\\nimport logo from './logo.png';\\nimport './App.css';\\nimport {Map, InfoWindow, Marker, Polygon, GoogleApiWrapper} from 'google-maps-react';\\n\\nconst GOOGLE_API_KEY = 'AIzaSyBWz2X0vNbXb1x95BtQoPwcIN8nOUzvTkE';\\n \\n\\nexport class App extends Component {  \\n  state = {\\n    showingInfoWindow: false,\\n    activeMarker: {},\\n    selectedPlace: {},\\n    vehicles:[],\\n  };\\n\\n  componentDidMount() {\\n\\tfetch('http://damians1.pl/json.php').then(response => {\\n\\t  return response.json(); \\n\\t}).then(data => {\\n\\t  // Work with JSON data here\\n\\t  this.setState({ vehicles: data })\\n\\t}).catch(err => {\\n\\t  // Do something for an error here\\n\\t  console.log(err);\\n\\t}); \\n\\t  \\n  }\\n \\n  onMarkerClick = (props, marker, e) =>\\n    this.setState({\\n      selectedPlace: props,\\n      activeMarker: marker,\\n      showingInfoWindow: true\\n    });\\n \\n  onMapClicked = (props) => {\\n    if (this.state.showingInfoWindow) {\\n      this.setState({\\n        showingInfoWindow: false,\\n        activeMarker: null\\n      })\\n    }\\n  };\\n  \\n  \\n  render() {\\n\\t   \\n  \\n\\tconst triangleCoords = [\\n\\t\\t{lat: 51.140581, lng: 17.074583},\\n\\t\\t{lat: 51.144096, lng: 17.052579},\\n\\t\\t{lat: 51.140004, lng: 17.032246},\\n\\t\\t{lat: 51.132895, lng: 17.027956},\\n\\t\\t{lat: 51.125525, lng: 17.001886},\\n\\t\\t{lat: 51.129404, lng: 16.982668},\\n\\t\\t{lat: 51.127357, lng: 16.979408},\\n\\t\\t{lat: 51.131989, lng: 16.957273},\\n\\t\\t{lat: 51.118306, lng: 16.943031},\\n\\t\\t{lat: 51.103218, lng: 16.962705},\\n\\t\\t{lat: 51.110655, lng: 16.995479},\\n\\t\\t{lat: 51.106236, lng: 17.014697},\\n\\t\\t{lat: 51.100524, lng: 16.993939},\\n\\t\\t{lat: 51.092654, lng: 16.974721},\\n\\t\\t{lat: 51.085537, lng: 17.010249},\\n\\t\\t{lat: 51.073782, lng: 17.005616},\\n\\t\\t{lat: 51.070654, lng: 17.053833},\\n\\t\\t{lat: 51.081655, lng: 17.050408},\\n\\t\\t{lat: 51.086724, lng: 17.069283},\\n\\t\\t{lat: 51.104620, lng: 17.052982},\\n\\t\\t{lat: 51.106775, lng: 17.068597},\\n\\t\\t{lat: 51.098152, lng: 17.090217},\\n\\t\\t{lat: 51.100631, lng: 17.123849},\\n\\t\\t{lat: 51.113457, lng: 17.108435},\\n\\t\\t{lat: 51.125849, lng: 17.079264},\\n\\t\\t{lat: 51.137590, lng: 17.083211},\\n\\t\\t{lat: 51.142006, lng: 17.083383},\\n\\t\\t{lat: 51.140581, lng: 17.074583}\\n\\t];\\t\\t  \\n    \\n\\tvar scooters = [{\\\"id\\\":241,\\\"lat\\\":51.098932666667,\\\"lng\\\":17.0038065,\\\"range\\\":14},{\\\"id\\\":243,\\\"lat\\\":51.11858,\\\"lng\\\":16.989835166667,\\\"range\\\":3},{\\\"id\\\":244,\\\"lat\\\":51.116777666667,\\\"lng\\\":17.031356833333,\\\"range\\\":48},{\\\"id\\\":247,\\\"lat\\\":51.058332166667,\\\"lng\\\":17.0282445,\\\"range\\\":35},{\\\"id\\\":248,\\\"lat\\\":51.119405666667,\\\"lng\\\":17.038474333333,\\\"range\\\":3},{\\\"id\\\":252,\\\"lat\\\":51.087229666667,\\\"lng\\\":17.010118833333,\\\"range\\\":65},{\\\"id\\\":253,\\\"lat\\\":51.076524833333,\\\"lng\\\":16.968351333333,\\\"range\\\":22},{\\\"id\\\":254,\\\"lat\\\":51.099404666667,\\\"lng\\\":17.048297833333,\\\"range\\\":15},{\\\"id\\\":255,\\\"lat\\\":51.061496166667,\\\"lng\\\":17.015276166667,\\\"range\\\":50},{\\\"id\\\":257,\\\"lat\\\":51.122367,\\\"lng\\\":17.055592666667,\\\"range\\\":65},{\\\"id\\\":258,\\\"lat\\\":51.088277333333,\\\"lng\\\":17.0147445,\\\"range\\\":48},{\\\"id\\\":259,\\\"lat\\\":51.085226333333,\\\"lng\\\":17.007428333333,\\\"range\\\":7},{\\\"id\\\":260,\\\"lat\\\":51.090418166667,\\\"lng\\\":17.023339,\\\"range\\\":48},{\\\"id\\\":261,\\\"lat\\\":51.1185755,\\\"lng\\\":16.981772166667,\\\"range\\\":39},{\\\"id\\\":263,\\\"lat\\\":51.127173,\\\"lng\\\":17.026330666667,\\\"range\\\":52},{\\\"id\\\":266,\\\"lat\\\":51.101625833333,\\\"lng\\\":17.0389705,\\\"range\\\":24},{\\\"id\\\":267,\\\"lat\\\":51.078764833333,\\\"lng\\\":16.998679166667,\\\"range\\\":52},{\\\"id\\\":268,\\\"lat\\\":51.076922,\\\"lng\\\":16.9656455,\\\"range\\\":44},{\\\"id\\\":269,\\\"lat\\\":51.0896465,\\\"lng\\\":17.0244295,\\\"range\\\":17},{\\\"id\\\":270,\\\"lat\\\":51.117092833333,\\\"lng\\\":17.021949833333,\\\"range\\\":48},{\\\"id\\\":271,\\\"lat\\\":51.127170333333,\\\"lng\\\":17.036501666667,\\\"range\\\":74},{\\\"id\\\":272,\\\"lat\\\":51.119269666667,\\\"lng\\\":17.028132666667,\\\"range\\\":35},{\\\"id\\\":275,\\\"lat\\\":51.110511333333,\\\"lng\\\":17.105124333333,\\\"range\\\":31},{\\\"id\\\":276,\\\"lat\\\":51.0810295,\\\"lng\\\":16.989674333333,\\\"range\\\":48},{\\\"id\\\":277,\\\"lat\\\":51.112769,\\\"lng\\\":17.026839166667,\\\"range\\\":62},{\\\"id\\\":278,\\\"lat\\\":51.053776166667,\\\"lng\\\":17.005589166667,\\\"range\\\":19},{\\\"id\\\":279,\\\"lat\\\":51.1062435,\\\"lng\\\":17.102507833333,\\\"range\\\":41},{\\\"id\\\":280,\\\"lat\\\":51.090591166667,\\\"lng\\\":17.0412115,\\\"range\\\":77},{\\\"id\\\":282,\\\"lat\\\":51.133098666667,\\\"lng\\\":17.030272,\\\"range\\\":35},{\\\"id\\\":283,\\\"lat\\\":51.124293,\\\"lng\\\":17.048598,\\\"range\\\":17},{\\\"id\\\":284,\\\"lat\\\":51.081005,\\\"lng\\\":16.992517333333,\\\"range\\\":27},{\\\"id\\\":285,\\\"lat\\\":51.1176305,\\\"lng\\\":17.019736666667,\\\"range\\\":39},{\\\"id\\\":286,\\\"lat\\\":51.120572666667,\\\"lng\\\":17.03547,\\\"range\\\":35},{\\\"id\\\":287,\\\"lat\\\":51.072824166667,\\\"lng\\\":17.041459833333,\\\"range\\\":31},{\\\"id\\\":290,\\\"lat\\\":51.092443166667,\\\"lng\\\":16.981737166667,\\\"range\\\":65},{\\\"id\\\":291,\\\"lat\\\":51.056803666667,\\\"lng\\\":17.013053333333,\\\"range\\\":22},{\\\"id\\\":292,\\\"lat\\\":51.110496,\\\"lng\\\":17.104988666667,\\\"range\\\":52},{\\\"id\\\":293,\\\"lat\\\":51.112788166667,\\\"lng\\\":17.088030333333,\\\"range\\\":48},{\\\"id\\\":295,\\\"lat\\\":51.110674,\\\"lng\\\":17.005851333333,\\\"range\\\":39},{\\\"id\\\":296,\\\"lat\\\":51.119712,\\\"lng\\\":17.032719166667,\\\"range\\\":35},{\\\"id\\\":297,\\\"lat\\\":51.1070525,\\\"lng\\\":17.0630905,\\\"range\\\":31},{\\\"id\\\":298,\\\"lat\\\":51.105300166667,\\\"lng\\\":17.038077333333,\\\"range\\\":52},{\\\"id\\\":303,\\\"lat\\\":51.083468,\\\"lng\\\":17.050802333333,\\\"range\\\":4},{\\\"id\\\":304,\\\"lat\\\":51.073401833333,\\\"lng\\\":16.989982666667,\\\"range\\\":29},{\\\"id\\\":305,\\\"lat\\\":51.0734705,\\\"lng\\\":16.994740333333,\\\"range\\\":31},{\\\"id\\\":306,\\\"lat\\\":51.117595833333,\\\"lng\\\":17.042164333333,\\\"range\\\":65},{\\\"id\\\":307,\\\"lat\\\":51.113291166667,\\\"lng\\\":17.085430333333,\\\"range\\\":35},{\\\"id\\\":309,\\\"lat\\\":51.052842,\\\"lng\\\":17.019604333333,\\\"range\\\":17},{\\\"id\\\":310,\\\"lat\\\":51.125073833333,\\\"lng\\\":16.997216166667,\\\"range\\\":30},{\\\"id\\\":311,\\\"lat\\\":51.098565,\\\"lng\\\":17.005009333333,\\\"range\\\":18},{\\\"id\\\":312,\\\"lat\\\":51.127217333333,\\\"lng\\\":16.948114166667,\\\"range\\\":24},{\\\"id\\\":314,\\\"lat\\\":51.101165166667,\\\"lng\\\":17.1105385,\\\"range\\\":31},{\\\"id\\\":315,\\\"lat\\\":51.088816,\\\"lng\\\":16.999925166667,\\\"range\\\":65},{\\\"id\\\":320,\\\"lat\\\":51.0696955,\\\"lng\\\":16.969465666667,\\\"range\\\":24},{\\\"id\\\":321,\\\"lat\\\":51.0855315,\\\"lng\\\":17.011847333333,\\\"range\\\":17},{\\\"id\\\":322,\\\"lat\\\":51.056166166667,\\\"lng\\\":17.011855666667,\\\"range\\\":52},{\\\"id\\\":347,\\\"lat\\\":51.105261833333,\\\"lng\\\":17.104816666667,\\\"range\\\":62},{\\\"id\\\":621,\\\"lat\\\":51.105005,\\\"lng\\\":17.085864166667,\\\"range\\\":24},{\\\"id\\\":623,\\\"lat\\\":51.138080166667,\\\"lng\\\":17.033078666667,\\\"range\\\":78},{\\\"id\\\":625,\\\"lat\\\":51.1045565,\\\"lng\\\":17.010261833333,\\\"range\\\":65},{\\\"id\\\":777,\\\"lat\\\":51.123455,\\\"lng\\\":17.085009833333,\\\"range\\\":24},{\\\"id\\\":813,\\\"lat\\\":51.116599,\\\"lng\\\":17.007050333333,\\\"range\\\":17},{\\\"id\\\":899,\\\"lat\\\":51.085425666667,\\\"lng\\\":16.998585833333,\\\"range\\\":52},{\\\"id\\\":900,\\\"lat\\\":51.0807815,\\\"lng\\\":17.064891833333,\\\"range\\\":39},{\\\"id\\\":901,\\\"lat\\\":51.114165166667,\\\"lng\\\":17.097491333333,\\\"range\\\":65},{\\\"id\\\":902,\\\"lat\\\":51.1012895,\\\"lng\\\":17.092482166667,\\\"range\\\":15},{\\\"id\\\":903,\\\"lat\\\":51.101083833333,\\\"lng\\\":17.031094,\\\"range\\\":32},{\\\"id\\\":904,\\\"lat\\\":51.087749833333,\\\"lng\\\":17.012507,\\\"range\\\":44},{\\\"id\\\":905,\\\"lat\\\":51.101266833333,\\\"lng\\\":16.998959666667,\\\"range\\\":31},{\\\"id\\\":907,\\\"lat\\\":51.0872755,\\\"lng\\\":17.054233166667,\\\"range\\\":52},{\\\"id\\\":909,\\\"lat\\\":51.083533,\\\"lng\\\":16.991377166667,\\\"range\\\":37},{\\\"id\\\":912,\\\"lat\\\":51.101548666667,\\\"lng\\\":17.0234145,\\\"range\\\":31},{\\\"id\\\":913,\\\"lat\\\":51.081565666667,\\\"lng\\\":16.989429833333,\\\"range\\\":3},{\\\"id\\\":915,\\\"lat\\\":51.103595833333,\\\"lng\\\":17.086906333333,\\\"range\\\":65},{\\\"id\\\":917,\\\"lat\\\":51.101998166667,\\\"lng\\\":17.020033333333,\\\"range\\\":62},{\\\"id\\\":918,\\\"lat\\\":51.134934166667,\\\"lng\\\":17.0696885,\\\"range\\\":18},{\\\"id\\\":922,\\\"lat\\\":51.076431333333,\\\"lng\\\":17.042426,\\\"range\\\":52},{\\\"id\\\":923,\\\"lat\\\":51.115269166667,\\\"lng\\\":17.097540666667,\\\"range\\\":65},{\\\"id\\\":925,\\\"lat\\\":51.100780166667,\\\"lng\\\":17.045369833333,\\\"range\\\":74},{\\\"id\\\":929,\\\"lat\\\":51.092619,\\\"lng\\\":17.043904666667,\\\"range\\\":3},{\\\"id\\\":930,\\\"lat\\\":51.114873333333,\\\"lng\\\":17.0004155,\\\"range\\\":11},{\\\"id\\\":933,\\\"lat\\\":51.127532333333,\\\"lng\\\":17.054460666667,\\\"range\\\":39},{\\\"id\\\":934,\\\"lat\\\":51.113235833333,\\\"lng\\\":17.006629333333,\\\"range\\\":18},{\\\"id\\\":950,\\\"lat\\\":51.121714333333,\\\"lng\\\":17.0598175,\\\"range\\\":65},{\\\"id\\\":952,\\\"lat\\\":51.117559166667,\\\"lng\\\":17.019437166667,\\\"range\\\":65}];\\n\\tconsole.log(scooters);\\n\\tvar marker_desc = '';\\n\\tconst imgUrl = `./img/scooter.png`;  \\n\\t\\t  \\n    return (\\n      <div className=\\\"App\\\">\\n        <header className=\\\"App-header\\\">\\n          <img src={logo} className=\\\"App-logo\\\" alt=\\\"logo\\\" />\\n        </header>\\t\\t\\n\\t\\t<main className=\\\"main-container\\\">\\n\\t\\t  <VehiclesList vehicles={scooters} />\\n\\t\\t  <div className=\\\"vehicles-list\\\">\\n\\t\\t\\t  <Map className=\\\"vehicles-map\\\" google={this.props.google}\\n\\t\\t\\t\\t  initialCenter={{ lat: 51.1095913, lng: 17.03160947 }}\\n\\t\\t\\t\\t  zoom={13}\\n\\t\\t\\t\\t  onClick={this.onMapClicked}>\\n\\t\\t\\t\\t  \\n\\t\\t\\t\\t<Polygon\\n\\t\\t\\t\\t  paths={triangleCoords}\\n\\t\\t\\t\\t  strokeColor=\\\"#006609\\\"\\n\\t\\t\\t\\t  strokeOpacity={0.9}\\n\\t\\t\\t\\t  strokeWeight={2}\\n\\t\\t\\t\\t  fillColor=\\\"#00ff33\\\"\\n\\t\\t\\t\\t  fillOpacity={0.20} />\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t{scooters.map(marker => (\\n\\t\\t\\t\\t\\t<Marker\\n\\t\\t\\t\\t\\t  position={{ lat: marker.lat, lng: marker.lng }}\\n\\t\\t\\t\\t\\t  key={marker.id} \\n\\t\\t\\t\\t\\t  icon={{ url: './img/marker-scooter.png', scaledSize: { width: 64, height: 64 } }} \\n\\t\\t\\t\\t\\t  onClick={this.onMarkerClick} \\n\\t\\t\\t\\t\\t  name={marker.id} \\n\\t\\t\\t\\t\\t  desc={'<div className=\\\"position\\\"><b>pozycja:</b> ' + Math.round(marker.lat * 10000000) / 10000000 + ', ' + Math.round(marker.lng * 10000000) / 10000000 + '</div><div className=\\\"range\\\"><b>zasięg:</b> ' + marker.range + 'km</div>'}\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t))}\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<InfoWindow\\n\\t\\t\\t\\t  marker={this.state.activeMarker}\\n\\t\\t\\t\\t  visible={this.state.showingInfoWindow}>\\n\\t\\t\\t\\t\\t<div>\\t\\t\\t\\t\\t  \\n\\t\\t\\t\\t\\t  <img src={imgUrl} className=\\\"map-icon\\\" alt=\\\"V\\\" />\\n\\t\\t\\t\\t\\t  <div className=\\\"content\\\">\\n\\t\\t\\t\\t\\t    <h2 className=\\\"header\\\">DW {this.state.selectedPlace.name}X</h2>\\n\\t\\t\\t\\t\\t    <div dangerouslySetInnerHTML={{ __html: this.state.selectedPlace.desc }}></div>\\n\\t\\t\\t\\t\\t\\t<button>Zarezerwuj pojazd</button>\\n\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</InfoWindow>\\n\\t\\t\\t\\t  \\n\\t\\t\\t  </Map>\\n\\t\\t  </div>\\n\\t\\t</main>\\t\\n      </div>\\n    );\\n  }\\n}\\n\\nfunction VehiclesList({ vehicles }) {\\n  return (\\n\\t<ul className=\\\"vehicles-list\\\">\\n\\t{vehicles.map(marker => (\\t\\n\\t  <VehicleItem\\n\\t\\tidx={marker.id} \\n\\t\\tvehicle_name={marker.id} \\n\\t\\tvehicle_type=\\\"scooter\\\"\\n\\t\\tlat={marker.lat} \\n\\t\\tlng={marker.lat} \\n\\t\\trange={marker.range} \\n\\t  />\\n\\t))}\\n\\t</ul>\\n  );\\n}\\n\\nfunction VehicleItem({ idx, vehicle_name, vehicle_type=\\\"car\\\", lat, lng, range }) {\\n  const imgUrl = `./img/marker-${vehicle_type}.png`; \\n  return (\\n\\t<li className=\\\"vehicle-item\\\">\\n\\t  <img src={imgUrl} className=\\\"map-marker\\\" alt=\\\"V\\\" />\\n\\t  <div className=\\\"content\\\">\\n\\t\\t<h3 className=\\\"header\\\">DW {vehicle_name}X</h3>\\n\\t\\t<div className=\\\"position\\\"><b>pozycja:</b> {Math.round(lat * 10000000) / 10000000}, {Math.round(lng * 10000000) / 10000000}</div>\\n\\t\\t<div className=\\\"range\\\"><b>zasięg:</b> {range}km</div>\\n\\t  </div>\\n\\t</li>\\n  );\\n}\\n\\nexport default GoogleApiWrapper({\\n  apiKey: (GOOGLE_API_KEY),\\n  language: 'pl',\\n})(App);\\n\",\"// In production, we register a service worker to serve assets from local cache.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\n// cached resources are updated in the background.\\n\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\n// This link also includes instructions on opting out of this behavior.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\\n          );\\n        });\\n      } else {\\n        // Is not local host. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the old content will have been purged and\\n              // the fresh content will have been added to the cache.\\n              // It's the perfect time to display a \\\"New content is\\n              // available; please refresh.\\\" message in your web app.\\n              console.log('New content is available; please refresh.');\\n\\n              // Execute callback\\n              if (config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{11:function(a,e,n){a.exports=n.p+\"static/media/logo.1edb075a.png\"},14:function(a,e,n){a.exports=n(38)},19:function(a,e,n){},21:function(a,e,n){},38:function(a,e,n){\"use strict\";n.r(e);var l=n(0),t=n.n(l),g=n(5),i=n.n(g),r=(n(19),n(8)),d=n(9),c=n(12),o=n(10),s=n(13),m=n(11),h=n.n(m),p=(n(21),n(3)),u=function(a){function e(){var a,n;Object(r.a)(this,e);for(var l=arguments.length,t=new Array(l),g=0;g<l;g++)t[g]=arguments[g];return(n=Object(c.a)(this,(a=Object(o.a)(e)).call.apply(a,[this].concat(t)))).state={showingInfoWindow:!1,activeMarker:{},selectedPlace:{},vehicles:[]},n.onMarkerClick=function(a,e,l){return n.setState({selectedPlace:a,activeMarker:e,showingInfoWindow:!0})},n.onMapClicked=function(a){n.state.showingInfoWindow&&n.setState({showingInfoWindow:!1,activeMarker:null})},n}return Object(s.a)(e,a),Object(d.a)(e,[{key:\"componentDidMount\",value:function(){var a=this;fetch(\"http://damians1.pl/json.php\").then(function(a){return a.json()}).then(function(e){a.setState({vehicles:e})}).catch(function(a){console.log(a)})}},{key:\"render\",value:function(){var a=this,e=[{id:241,lat:51.098932666667,lng:17.0038065,range:14},{id:243,lat:51.11858,lng:16.989835166667,range:3},{id:244,lat:51.116777666667,lng:17.031356833333,range:48},{id:247,lat:51.058332166667,lng:17.0282445,range:35},{id:248,lat:51.119405666667,lng:17.038474333333,range:3},{id:252,lat:51.087229666667,lng:17.010118833333,range:65},{id:253,lat:51.076524833333,lng:16.968351333333,range:22},{id:254,lat:51.099404666667,lng:17.048297833333,range:15},{id:255,lat:51.061496166667,lng:17.015276166667,range:50},{id:257,lat:51.122367,lng:17.055592666667,range:65},{id:258,lat:51.088277333333,lng:17.0147445,range:48},{id:259,lat:51.085226333333,lng:17.007428333333,range:7},{id:260,lat:51.090418166667,lng:17.023339,range:48},{id:261,lat:51.1185755,lng:16.981772166667,range:39},{id:263,lat:51.127173,lng:17.026330666667,range:52},{id:266,lat:51.101625833333,lng:17.0389705,range:24},{id:267,lat:51.078764833333,lng:16.998679166667,range:52},{id:268,lat:51.076922,lng:16.9656455,range:44},{id:269,lat:51.0896465,lng:17.0244295,range:17},{id:270,lat:51.117092833333,lng:17.021949833333,range:48},{id:271,lat:51.127170333333,lng:17.036501666667,range:74},{id:272,lat:51.119269666667,lng:17.028132666667,range:35},{id:275,lat:51.110511333333,lng:17.105124333333,range:31},{id:276,lat:51.0810295,lng:16.989674333333,range:48},{id:277,lat:51.112769,lng:17.026839166667,range:62},{id:278,lat:51.053776166667,lng:17.005589166667,range:19},{id:279,lat:51.1062435,lng:17.102507833333,range:41},{id:280,lat:51.090591166667,lng:17.0412115,range:77},{id:282,lat:51.133098666667,lng:17.030272,range:35},{id:283,lat:51.124293,lng:17.048598,range:17},{id:284,lat:51.081005,lng:16.992517333333,range:27},{id:285,lat:51.1176305,lng:17.019736666667,range:39},{id:286,lat:51.120572666667,lng:17.03547,range:35},{id:287,lat:51.072824166667,lng:17.041459833333,range:31},{id:290,lat:51.092443166667,lng:16.981737166667,range:65},{id:291,lat:51.056803666667,lng:17.013053333333,range:22},{id:292,lat:51.110496,lng:17.104988666667,range:52},{id:293,lat:51.112788166667,lng:17.088030333333,range:48},{id:295,lat:51.110674,lng:17.005851333333,range:39},{id:296,lat:51.119712,lng:17.032719166667,range:35},{id:297,lat:51.1070525,lng:17.0630905,range:31},{id:298,lat:51.105300166667,lng:17.038077333333,range:52},{id:303,lat:51.083468,lng:17.050802333333,range:4},{id:304,lat:51.073401833333,lng:16.989982666667,range:29},{id:305,lat:51.0734705,lng:16.994740333333,range:31},{id:306,lat:51.117595833333,lng:17.042164333333,range:65},{id:307,lat:51.113291166667,lng:17.085430333333,range:35},{id:309,lat:51.052842,lng:17.019604333333,range:17},{id:310,lat:51.125073833333,lng:16.997216166667,range:30},{id:311,lat:51.098565,lng:17.005009333333,range:18},{id:312,lat:51.127217333333,lng:16.948114166667,range:24},{id:314,lat:51.101165166667,lng:17.1105385,range:31},{id:315,lat:51.088816,lng:16.999925166667,range:65},{id:320,lat:51.0696955,lng:16.969465666667,range:24},{id:321,lat:51.0855315,lng:17.011847333333,range:17},{id:322,lat:51.056166166667,lng:17.011855666667,range:52},{id:347,lat:51.105261833333,lng:17.104816666667,range:62},{id:621,lat:51.105005,lng:17.085864166667,range:24},{id:623,lat:51.138080166667,lng:17.033078666667,range:78},{id:625,lat:51.1045565,lng:17.010261833333,range:65},{id:777,lat:51.123455,lng:17.085009833333,range:24},{id:813,lat:51.116599,lng:17.007050333333,range:17},{id:899,lat:51.085425666667,lng:16.998585833333,range:52},{id:900,lat:51.0807815,lng:17.064891833333,range:39},{id:901,lat:51.114165166667,lng:17.097491333333,range:65},{id:902,lat:51.1012895,lng:17.092482166667,range:15},{id:903,lat:51.101083833333,lng:17.031094,range:32},{id:904,lat:51.087749833333,lng:17.012507,range:44},{id:905,lat:51.101266833333,lng:16.998959666667,range:31},{id:907,lat:51.0872755,lng:17.054233166667,range:52},{id:909,lat:51.083533,lng:16.991377166667,range:37},{id:912,lat:51.101548666667,lng:17.0234145,range:31},{id:913,lat:51.081565666667,lng:16.989429833333,range:3},{id:915,lat:51.103595833333,lng:17.086906333333,range:65},{id:917,lat:51.101998166667,lng:17.020033333333,range:62},{id:918,lat:51.134934166667,lng:17.0696885,range:18},{id:922,lat:51.076431333333,lng:17.042426,range:52},{id:923,lat:51.115269166667,lng:17.097540666667,range:65},{id:925,lat:51.100780166667,lng:17.045369833333,range:74},{id:929,lat:51.092619,lng:17.043904666667,range:3},{id:930,lat:51.114873333333,lng:17.0004155,range:11},{id:933,lat:51.127532333333,lng:17.054460666667,range:39},{id:934,lat:51.113235833333,lng:17.006629333333,range:18},{id:950,lat:51.121714333333,lng:17.0598175,range:65},{id:952,lat:51.117559166667,lng:17.019437166667,range:65}];console.log(e);return t.a.createElement(\"div\",{className:\"App\"},t.a.createElement(\"header\",{className:\"App-header\"},t.a.createElement(\"img\",{src:h.a,className:\"App-logo\",alt:\"logo\"})),t.a.createElement(\"main\",{className:\"main-container\"},t.a.createElement(v,{vehicles:e}),t.a.createElement(\"div\",{className:\"vehicles-list\"},t.a.createElement(p.Map,{className:\"vehicles-map\",google:this.props.google,initialCenter:{lat:51.1095913,lng:17.03160947},zoom:13,onClick:this.onMapClicked},t.a.createElement(p.Polygon,{paths:[{lat:51.140581,lng:17.074583},{lat:51.144096,lng:17.052579},{lat:51.140004,lng:17.032246},{lat:51.132895,lng:17.027956},{lat:51.125525,lng:17.001886},{lat:51.129404,lng:16.982668},{lat:51.127357,lng:16.979408},{lat:51.131989,lng:16.957273},{lat:51.118306,lng:16.943031},{lat:51.103218,lng:16.962705},{lat:51.110655,lng:16.995479},{lat:51.106236,lng:17.014697},{lat:51.100524,lng:16.993939},{lat:51.092654,lng:16.974721},{lat:51.085537,lng:17.010249},{lat:51.073782,lng:17.005616},{lat:51.070654,lng:17.053833},{lat:51.081655,lng:17.050408},{lat:51.086724,lng:17.069283},{lat:51.10462,lng:17.052982},{lat:51.106775,lng:17.068597},{lat:51.098152,lng:17.090217},{lat:51.100631,lng:17.123849},{lat:51.113457,lng:17.108435},{lat:51.125849,lng:17.079264},{lat:51.13759,lng:17.083211},{lat:51.142006,lng:17.083383},{lat:51.140581,lng:17.074583}],strokeColor:\"#006609\",strokeOpacity:.9,strokeWeight:2,fillColor:\"#00ff33\",fillOpacity:.2}),e.map(function(e){return t.a.createElement(p.Marker,{position:{lat:e.lat,lng:e.lng},key:e.id,icon:{url:\"./img/marker-scooter.png\",scaledSize:{width:64,height:64}},onClick:a.onMarkerClick,name:e.id,desc:'<div className=\"position\"><b>pozycja:</b> '+Math.round(1e7*e.lat)/1e7+\", \"+Math.round(1e7*e.lng)/1e7+'</div><div className=\"range\"><b>zasi\\u0119g:</b> '+e.range+\"km</div>\"})}),t.a.createElement(p.InfoWindow,{marker:this.state.activeMarker,visible:this.state.showingInfoWindow},t.a.createElement(\"div\",null,t.a.createElement(\"img\",{src:\"./img/scooter.png\",className:\"map-icon\",alt:\"V\"}),t.a.createElement(\"div\",{className:\"content\"},t.a.createElement(\"h2\",{className:\"header\"},\"DW \",this.state.selectedPlace.name,\"X\"),t.a.createElement(\"div\",{dangerouslySetInnerHTML:{__html:this.state.selectedPlace.desc}}),t.a.createElement(\"button\",null,\"Zarezerwuj pojazd\"))))))))}}]),e}(l.Component);function v(a){var e=a.vehicles;return t.a.createElement(\"ul\",{className:\"vehicles-list\"},e.map(function(a){return t.a.createElement(f,{idx:a.id,vehicle_name:a.id,vehicle_type:\"scooter\",lat:a.lat,lng:a.lat,range:a.range})}))}function f(a){a.idx;var e=a.vehicle_name,n=a.vehicle_type,l=void 0===n?\"car\":n,g=a.lat,i=a.lng,r=a.range,d=\"./img/marker-\".concat(l,\".png\");return t.a.createElement(\"li\",{className:\"vehicle-item\"},t.a.createElement(\"img\",{src:d,className:\"map-marker\",alt:\"V\"}),t.a.createElement(\"div\",{className:\"content\"},t.a.createElement(\"h3\",{className:\"header\"},\"DW \",e,\"X\"),t.a.createElement(\"div\",{className:\"position\"},t.a.createElement(\"b\",null,\"pozycja:\"),\" \",Math.round(1e7*g)/1e7,\", \",Math.round(1e7*i)/1e7),t.a.createElement(\"div\",{className:\"range\"},t.a.createElement(\"b\",null,\"zasi\\u0119g:\"),\" \",r,\"km\")))}var k=Object(p.GoogleApiWrapper)({apiKey:\"AIzaSyBWz2X0vNbXb1x95BtQoPwcIN8nOUzvTkE\",language:\"pl\"})(u);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(t.a.createElement(k,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(a){a.unregister()})}},[[14,2,1]]]);","extractedComments":[]}